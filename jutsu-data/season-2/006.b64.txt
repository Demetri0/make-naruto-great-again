cHZpZXdfYW5pbWUgPSAibmFydXRvIjsgcHZpZXdfY2F0ZWdvcnkgPSAibiI7IHB2aWV3X3R5cGUgPSAiMCI7IHB2aWV3X3NlYXNvbiA9ICIyIjsgcHZpZXdfZXBpc29kZSA9ICI2IjsNCnZpZGVvX2ludHJvX3N0YXJ0ID0gMTkyOyB2aWRlb19pbnRyb19lbmQgPSAyODI7IHZpZGVvX211c2ljX2ludHJvID0gImh0dHBzOi8vZ2VvLml0dW5lcy5hcHBsZS5jb20vcnUvYWxidW0vMTUzNTQ5NjkxND9pPTE1MzU0OTY5MjAmbXQ9MSZhcHA9bXVzaWMmYXQ9MTAxMGwzNGlpJmN0PXBsYXllciI7IHZpZGVvX291dHJvX3N0YXJ0ID0gMTIwNTsgdmlkZW9fbXVzaWNfb3V0cm8gPSAiaHR0cHM6Ly9nZW8uaXR1bmVzLmFwcGxlLmNvbS9ydS9hbGJ1bS83ODQyOTQ4MDI/aT03ODQyOTQ4MzEmbXQ9MSZhcHA9bXVzaWMmYXQ9MTAxMGwzNGlpJmN0PXBsYXllciI7CnRoaXNfdmlkZW9fZHVyYXRpb24gPSAxMzg3OwpqdXRzdV9uZXdfcGxheWVyID0gInllcyI7
dmFyIHNvbWVfYWNoaXZfc3RyID0gImRtRnlJSFJvYVhOZllXNXBiV1ZmWVdOb2FXVjJaVzFsYm5SeklEMGdXMTA3Q25Sb2FYTmZZVzVwYldWZllXTm9hV1YyWlcxbGJuUnpMbkIxYzJnb2V3cGpZWFJsWjI5eWVUb2dJbVYyWlc1MGN5SXNDblJwYldWZmMzUmhjblE2SURFeE9Ua3NDblJwZEd4bE9pQWkwSmZRc3RDMTBZRFJqQ0RRdDlDdzBZWFFzdEN3MFlmUXRkQzlJaXdLWkdWelkzSnBjSFJwYjI0NklDTFFtdEN3MExmUXRkQzYwTERRczlDMUlOQy8wTDdRc3RDMTBZRFF0dEMxMEwwaUxBcHBZMjl1T2lCcWMxOXdjbVZ5WlhOZmRYSnNJQ3NnSWk5MWNHeHZZV1J6TDJGamFHbGxkbVZ0Wlc1MGN5OXBZMjl1Y3k4eU9ESXVhbkJuSWl3S2FXUTZJQ0l5T0RJaUxBcG9ZWE5vT2lBaVl6SmhNVGt5TWpnNU1tWTNZV1kwWmlJS2ZTazdEUXAyWVhJZ2RHaHBjMTloYm1sdFpWOWhZMmhwWlhabGJXVnVkSE5mYVdOdmJuTWdQU0JiYW5OZmNISmxjbVZ6WDNWeWJDQXJJQ0l2ZFhCc2IyRmtjeTloWTJocFpYWmxiV1Z1ZEhNdmFXTnZibk12TWpneUxtcHdaeUlzSUdwelgzQnlaWEpsYzE5MWNtd2dLeUFpTDNSbGJYQnNZWFJsY3k5elkyaHZiMnd2YVcxaFoyVnpMMkZqYUdsMkwyRmphR2xsZG1WdFpXNTBYMjFoYVc0dWNHNW5JaXdnYW5OZmNISmxjbVZ6WDNWeWJDQXJJQ0l2ZEdWdGNHeGhkR1Z6TDNOamFHOXZiQzlwYldGblpYTXZZV05vYVhZdllXTm9hV1YyWlcxbGJuUmZiV0ZwYmw5aWJHbHVheTV3Ym1jaUxDQnFjMTl3Y21WeVpYTmZkWEpzSUNzZ0lpOTBaVzF3YkdGMFpYTXZjMk5vYjI5c0wybHRZV2RsY3k5aFkyaHBkaTloWTJocFpYWmxiV1Z1ZEY5dFlXbHVYMmRzYjNjdWNHNW5JaXdnYW5OZmNISmxjbVZ6WDNWeWJDQXJJQ0l2ZEdWdGNHeGhkR1Z6TDNOamFHOXZiQzlwYldGblpYTXZZV05vYVhZdllXTm9hV1YyWlcxbGJuUmZiV0ZwYmw5aVlXUm5aVjltY21GdFpTNXdibWNpWFRzPSI7
